name: Build and Push Docker Images

on:
  push:
    branches: [ main ]
    paths:
      - 'images/**'
      - '.github/workflows/build.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'images/**'
      - '.github/workflows/build.yml'

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      node: ${{ steps.changes.outputs.node }}
      php: ${{ steps.changes.outputs.php }}
      vpn-proxy: ${{ steps.changes.outputs.vpn-proxy }}
      node-python: ${{ steps.changes.outputs.node-python }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            node:
              - 'images/node/**'
            php:
              - 'images/php/**'
            vpn-proxy:
              - 'images/vpn-proxy/**'
            node-python:
              - 'images/node-python/**'

  build-node:
    needs: detect-changes
    if: needs.detect-changes.outputs.node == 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20, 22]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Node.js image
        uses: docker/build-push-action@v5
        with:
          context: ./images/node
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: |
            NODE_VERSION=${{ matrix.node-version }}-alpine
          tags: |
            ghcr.io/${{ github.repository_owner }}/node-dev:${{ matrix.node-version }}
            ghcr.io/${{ github.repository_owner }}/node-dev:${{ matrix.node-version }}-${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-php:
    needs: detect-changes
    if: needs.detect-changes.outputs.php == 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: [8.1, 8.2, 8.3]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push PHP image
        uses: docker/build-push-action@v5
        with:
          context: ./images/php
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: |
            PHP_VERSION=${{ matrix.php-version }}
          tags: |
            ghcr.io/${{ github.repository_owner }}/php-dev:${{ matrix.php-version }}
            ghcr.io/${{ github.repository_owner }}/php-dev:${{ matrix.php-version }}-${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-vpn-proxy:
    needs: detect-changes
    if: needs.detect-changes.outputs.vpn-proxy == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push VPN Proxy image
        uses: docker/build-push-action@v5
        with:
          context: ./images/vpn-proxy
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/vpn-proxy:latest
            ghcr.io/${{ github.repository_owner }}/vpn-proxy:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-node-python:
    needs: detect-changes
    if: needs.detect-changes.outputs.node-python == 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20, 22]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Node-Python image
        uses: docker/build-push-action@v5
        with:
          context: ./images/node-python
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: |
            NODE_VERSION=${{ matrix.node-version }}-bullseye
          tags: |
            ghcr.io/${{ github.repository_owner }}/node-python-dev:${{ matrix.node-version }}
            ghcr.io/${{ github.repository_owner }}/node-python-dev:${{ matrix.node-version }}-${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max